{"ast":null,"code":"var _jsxFileName = \"/Users/jkim/Projects/Chatbot-App/client/src/components/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\"; //  Import action\n\nimport { userMessage, sendMessage } from \"../../actions/watson\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = ({\n  chat,\n  userMessage,\n  sendMessage\n}) => {\n  _s();\n\n  // Handle Users Message\n  const [message, setMessage] = useState(\"\");\n  const endOfMessages = useRef(null);\n\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [chat]); //  Function that handles user submission\n\n  const handleClick = async e => {\n    const code = e.keyCode || e.which;\n\n    if (code === 13) {\n      console.log(message);\n      userMessage(message);\n      sendMessage(message);\n      setMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatty the Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"historyContainer\",\n      children: [chat.length === 0 ? \"\" : chat.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.type,\n        children: msg.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endOfMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"chatBox\",\n      onChange: e => setMessage(e.target.value),\n      onKeyPress: handleClick,\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"umRjliTTWvovmu9KR20kFWwAI0Q=\");\n\n_c = Chat;\n\nconst mapStateToProps = state => ({\n  chat: state.watson.messages\n});\n\nexport default connect(mapStateToProps, {\n  userMessage,\n  sendMessage\n})(Chat);\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jkim/Projects/Chatbot-App/client/src/components/chat/Chat.js"],"names":["React","useState","useEffect","useRef","connect","userMessage","sendMessage","Chat","chat","message","setMessage","endOfMessages","scrollToBottom","current","scrollIntoView","behavior","handleClick","e","code","keyCode","which","console","log","length","map","msg","type","target","value","mapStateToProps","state","watson","messages"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,sBAAzC;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQH,EAAAA,WAAR;AAAqBC,EAAAA;AAArB,CAAD,KAAwC;AAAA;;AACnD;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMU,aAAa,GAAGR,MAAM,CAAC,IAAD,CAA5B;;AAEA,QAAMS,cAAc,GAAG,MAAM;AAC3BD,IAAAA,aAAa,CAACE,OAAd,CAAsBC,cAAtB,CAAqC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAArC;AACD,GAFD;;AAGAb,EAAAA,SAAS,CAACU,cAAD,EAAiB,CAACJ,IAAD,CAAjB,CAAT,CARmD,CAUnD;;AACA,QAAMQ,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/B,UAAMC,IAAI,GAAGD,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACG,KAA5B;;AAEA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACfG,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACAJ,MAAAA,WAAW,CAACI,OAAD,CAAX;AACAH,MAAAA,WAAW,CAACG,OAAD,CAAX;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGF,IAAI,CAACe,MAAL,KAAgB,CAAhB,GACG,EADH,GAEGf,IAAI,CAACgB,GAAL,CAAUC,GAAD,iBAAS;AAAK,QAAA,SAAS,EAAEA,GAAG,CAACC,IAApB;AAAA,kBAA2BD,GAAG,CAAChB;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAlB,CAHN,eAIE;AAAK,QAAA,GAAG,EAAEE;AAAV;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,QAAQ,EAAGM,CAAD,IAAOP,UAAU,CAACO,CAAC,CAACU,MAAF,CAASC,KAAV,CAF7B;AAGE,MAAA,UAAU,EAAEZ,WAHd;AAIE,MAAA,KAAK,EAAEP;AAJT;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzCD;;GAAMF,I;;KAAAA,I;;AA0CN,MAAMsB,eAAe,GAAIC,KAAD,KAAY;AAClCtB,EAAAA,IAAI,EAAEsB,KAAK,CAACC,MAAN,CAAaC;AADe,CAAZ,CAAxB;;AAIA,eAAe5B,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAuDC,IAAvD,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\n//  Import action\nimport { userMessage, sendMessage } from \"../../actions/watson\";\n\nconst Chat = ({ chat, userMessage, sendMessage }) => {\n  // Handle Users Message\n  const [message, setMessage] = useState(\"\");\n  const endOfMessages = useRef(null);\n\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(scrollToBottom, [chat]);\n\n  //  Function that handles user submission\n  const handleClick = async (e) => {\n    const code = e.keyCode || e.which;\n\n    if (code === 13) {\n      console.log(message);\n      userMessage(message);\n      sendMessage(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"chat\">\n      <h1>Chatty the Chatbot</h1>\n      {/* Handle Messages */}\n      <div className=\"historyContainer\">\n        {chat.length === 0\n          ? \"\"\n          : chat.map((msg) => <div className={msg.type}>{msg.message}</div>)}\n        <div ref={endOfMessages}></div>\n      </div>\n      {/* Input Box */}\n      <input\n        id=\"chatBox\"\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyPress={handleClick}\n        value={message}\n      ></input>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  chat: state.watson.messages,\n});\n\nexport default connect(mapStateToProps, { userMessage, sendMessage })(Chat);\n"]},"metadata":{},"sourceType":"module"}