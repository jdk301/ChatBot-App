{"ast":null,"code":"import { INPUT_SUCCESS, INPUT_FAIL, SESSION_SUCCESS, SESSION_FAIL, MESSAGE_SUCCESS, MESSAGE_FAIL } from \"./types\";\nimport axios from \"axios\"; // function that handles user's message\n\nexport const userMessage = message => async dispatch => {\n  try {\n    dispatch({\n      type: INPUT_SUCCESS,\n      payload: message\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUT_FAIL\n    });\n  }\n}; // creates a session - API CALL\n\nexport const createSession = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/watson/session\");\n    dispatch({\n      type: SESSION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SESSION_FAIL\n    });\n  }\n}; // sends the message to the bot - API CALL\n\nexport const sendMessage = message => async dispatch => {\n  try {\n    const body = {\n      input: message\n    };\n    const res = await axios.post(\"/api/watson/message\", body);\n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: res.data.output.generic[0].text\n    });\n  } catch (err) {\n    dispatch({\n      type: MESSAGE_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jkim/Projects/Chatbot-App/client/src/actions/watson.js"],"names":["INPUT_SUCCESS","INPUT_FAIL","SESSION_SUCCESS","SESSION_FAIL","MESSAGE_SUCCESS","MESSAGE_FAIL","axios","userMessage","message","dispatch","type","payload","err","createSession","res","get","data","sendMessage","body","input","post","output","generic","text"],"mappings":"AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,eALF,EAMEC,YANF,QAOO,SAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,aAAR;AAAuBW,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAAR;AACD,GAFD,CAEE,OAAOI,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACD;AACF,CANM,C,CAQP;;AACA,OAAO,MAAMY,aAAa,GAAG,MAAM,MAAOJ,QAAP,IAAoB;AACrD,MAAI;AACF,UAAMK,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,qBAAV,CAAlB;AACAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,eAAR;AAAyBS,MAAAA,OAAO,EAAEG,GAAG,CAACE;AAAtC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOJ,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACD;AACF,CAPM,C,CASP;;AACA,OAAO,MAAMc,WAAW,GAAIT,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMS,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAAEX;AAAT,KAAb;AACA,UAAMM,GAAG,GAAG,MAAMR,KAAK,CAACc,IAAN,CAAW,qBAAX,EAAkCF,IAAlC,CAAlB;AACAT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,eADC;AAEPO,MAAAA,OAAO,EAAEG,GAAG,CAACE,IAAJ,CAASK,MAAT,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BC;AAF7B,KAAD,CAAR;AAID,GAPD,CAOE,OAAOX,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACD;AACF,CAXM","sourcesContent":["import {\n  INPUT_SUCCESS,\n  INPUT_FAIL,\n  SESSION_SUCCESS,\n  SESSION_FAIL,\n  MESSAGE_SUCCESS,\n  MESSAGE_FAIL,\n} from \"./types\";\nimport axios from \"axios\";\n\n// function that handles user's message\nexport const userMessage = (message) => async (dispatch) => {\n  try {\n    dispatch({ type: INPUT_SUCCESS, payload: message });\n  } catch (err) {\n    dispatch({ type: INPUT_FAIL });\n  }\n};\n\n// creates a session - API CALL\nexport const createSession = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/watson/session\");\n    dispatch({ type: SESSION_SUCCESS, payload: res.data });\n  } catch (err) {\n    dispatch({ type: SESSION_FAIL });\n  }\n};\n\n// sends the message to the bot - API CALL\nexport const sendMessage = (message) => async (dispatch) => {\n  try {\n    const body = { input: message };\n    const res = await axios.post(\"/api/watson/message\", body);\n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: res.data.output.generic[0].text,\n    });\n  } catch (err) {\n    dispatch({ type: MESSAGE_FAIL });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}